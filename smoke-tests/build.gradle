plugins {
  id "java"
}

dependencies {
  testImplementation(project(":custom"))
  testImplementation("org.testcontainers:testcontainers:1.19.7")
  testImplementation("com.fasterxml.jackson.core:jackson-databind:2.17.0")
  testImplementation("com.google.protobuf:protobuf-java-util:3.25.3")
  testImplementation("com.squareup.okhttp3:okhttp:4.12.0")
  testImplementation("io.opentelemetry.proto:opentelemetry-proto:1.3.1-alpha")
  testImplementation("io.opentelemetry:opentelemetry-api")
  testImplementation("io.opentelemetry.semconv:opentelemetry-semconv")

  testImplementation("ch.qos.logback:logback-classic:1.5.3")
  testImplementation("org.awaitility:awaitility:4.2.1")
}

tasks.test {
  onlyIf {
    // always execute smoke tests when running in IntelliJ
    // on the command line, don't run smoke tests, unless the SMOKE_TEST_JAVA_VERSION environment variable is set
    System.getProperty("idea.active") != null || System.getenv("SMOKE_TEST_JAVA_VERSION") != null
  }
  useJUnitPlatform()

  testLogging.showStandardStreams = true

  def shadowTask = project(":agent").tasks.shadowJar
  dependsOn(shadowTask)
  inputs.files(layout.files(shadowTask))

  doFirst {
    jvmArgs("-Dio.opentelemetry.smoketest.agent.shadowJar.path=${shadowTask.archiveFile.get()}")
  }
}
