name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - build.gradle # Tag is here
      - .github/workflows/release.yml # This file

permissions:
  contents: write
  id-token: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      tag_exists: ${{ steps.tag_create.outputs.tag_exists }}
    steps:
      - uses: actions/checkout@v4
      - name: Read Tag Version
        run: |
          sed -nr "s/version '([^\']+)'/TAG=\1/p" build.gradle >> $GITHUB_ENV
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: "v${{ env.TAG }}"
          tag_exists_error: false
  release:
    needs: create-tag
    if: needs.create-tag.outputs.tag_exists == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: "gradle"
      - name: Setup Gradle and run build
        uses: gradle/actions/setup-gradle@v4
      - name: Build
        run: ./gradlew assemble
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            agent/build/libs/grafana-opentelemetry-java.jar
            LICENSE
      - name: Push to Docker (for OpenTelemetry Operator)
        uses: grafana/shared-workflows/actions/push-to-gar-docker@main
        with:
          registry: "us-docker.pkg.dev"
          image_name: grafana-opentelemetry-java
          context: .
          file: scripts/otel_operator/Dockerfile
          tags: |
            type=match,pattern=v(.*),group=1
            latest
          environment: "prod"

