# Example dockerfile using the Spring petclinic: https://github.com/spring-projects/spring-petclinic

FROM springio/petclinic

# Login to Grafana Cloud and follow the following instructions
# to obtain the necessary information to send telemetry data to Grafana Cloud:
#
# If you're just getting started with Grafana Cloud, you can sign up for permanent free plan:
# https://grafana.com/products/cloud/.
#
# 1. Click **Details** in the **Grafana** section on <https://grafana.com/profile/org>
# 2. Copy **Instance ID**.
ENV GRAFANA_CLOUD_INSTANCE_ID=<Instance ID>

# 3. Copy the last part of **Zone**
#    (e.g. `prod-eu-west-0` from `EU Belgium - gcp europe-west1 - eu - prod-eu-west-0`).
ENV GRAFANA_CLOUD_ZONE=<Zone>

# 4. On the left menu, click on **Security** and then on **API Keys**
# 5. Click on **Add API Key** (MetricsPublisher role) and copy the key into the command below
#    Note on security:
#      You might want to pass in the API key or use Kubernetes secret instead of an environment variable.
#      However, the API key is only able to publish metrics to Grafana Cloud - not read or modify any data.
ENV GRAFANA_CLOUD_API_KEY=<API Key>

# 6. Choose a **Service Name** to identify the service (e.g. `cart`)
ENV OTEL_SERVICE_NAME=<Service Name>

# 7. Optionally, add attributes to filter data:
#    - **deployment.environment**: Name of the deployment environment (`staging` or `production`)
#    - **service.namespace**: A namespace to group similar services
#      (e.g. `shop` would create `shop/cart` in Application Observability)
#    - **service.version**: The application version, to see if a new version has introduced a bug
#    - **service.instance.id**: The unique instance, for example the Pod name (a UUID is generated by default)
# ENV OTEL_RESOURCE_ATTRIBUTES=deployment.environment=<Environment>,service.namespace=<Namespace>,service.version=<Version>

# Build and run the application:
#  8. docker build -t grafana_opentelemetry_java_demo .
#  9. docker run -p 8080:8080 grafana_opentelemetry_java_demo
# 10. Open <http://localhost:8080> in your browser
# 11. Click on "Error" in the top right corner to generate an error
# 12. Open Application Observability in Grafana Cloud:
#     - Click on the menu icon in the top left corner
#     - Open the "Observability" menu
#     - Click on "Application"
# Note: It might take up to five minutes for data to appear.

ARG version=0.31.0
WORKDIR /app/

# use a fixed version
# ADD https://github.com/grafana/grafana-opentelemetry-java/releases/download/v$version/grafana-opentelemetry-java.jar /app/grafana-opentelemetry-java.jar
# use the latest version
# user is changed, because the springio/petclinic image is running as cnb
ADD --chown=cnb https://github.com/grafana/grafana-opentelemetry-java/releases/latest/download/grafana-opentelemetry-java.jar /app/grafana-opentelemetry-java.jar
ENV JAVA_TOOL_OPTIONS=-javaagent:/app/grafana-opentelemetry-java.jar
